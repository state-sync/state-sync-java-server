// Generated by delombok at Tue Jul 03 21:02:45 NOVT 2018
package org.statesync.protocol;

public abstract class EventMessage extends OutboundMessage {
	public final EventType type;

	@java.lang.SuppressWarnings("all")
	public EventType getType() {
		return this.type;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "EventMessage(type=" + this.getType() + ")";
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof EventMessage)) return false;
		final EventMessage other = (EventMessage) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$type = this.getType();
		final java.lang.Object other$type = other.getType();
		if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof EventMessage;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = super.hashCode();
		final java.lang.Object $type = this.getType();
		result = result * PRIME + ($type == null ? 43 : $type.hashCode());
		return result;
	}

	@java.lang.SuppressWarnings("all")
	public EventMessage(final EventType type) {
		this.type = type;
	}
}
